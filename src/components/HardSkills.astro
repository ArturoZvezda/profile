---
const { t } = Astro.props;

const skillCategories = [
  {
    name: t.hardSkills.categories.backend.name,
    expertise: 'expert',
    description: t.hardSkills.categories.backend.description,
    items: t.hardSkills.categories.backend.items,
    color: 'cyan',
    icon: 'server'
  },
  {
    name: t.hardSkills.categories.frontend.name,
    expertise: 'proficient',
    description: t.hardSkills.categories.frontend.description,
    items: t.hardSkills.categories.frontend.items,
    color: 'magenta',
    icon: 'code'
  },
  {
    name: t.hardSkills.categories.architecture.name,
    expertise: 'expert',
    description: t.hardSkills.categories.architecture.description,
    items: t.hardSkills.categories.architecture.items,
    color: 'blue',
    icon: 'blueprint'
  },
  {
    name: t.hardSkills.categories.database.name,
    expertise: 'proficient',
    description: t.hardSkills.categories.database.description,
    items: t.hardSkills.categories.database.items,
    color: 'cyan',
    icon: 'database'
  },
  {
    name: t.hardSkills.categories.versionControl.name,
    expertise: 'proficient',
    description: t.hardSkills.categories.versionControl.description,
    items: t.hardSkills.categories.versionControl.items,
    color: 'magenta',
    icon: 'git'
  },
  {
    name: t.hardSkills.categories.devops.name,
    expertise: 'working',
    description: t.hardSkills.categories.devops.description,
    items: t.hardSkills.categories.devops.items,
    color: 'blue',
    icon: 'cloud'
  },
  {
    name: t.hardSkills.categories.mobile.name,
    expertise: 'working',
    description: t.hardSkills.categories.mobile.description,
    items: t.hardSkills.categories.mobile.items,
    color: 'cyan',
    icon: 'mobile'
  },
  {
    name: t.hardSkills.categories.ai.name,
    expertise: 'working',
    description: t.hardSkills.categories.ai.description,
    items: t.hardSkills.categories.ai.items,
    color: 'magenta',
    icon: 'ai'
  }
];

const getExpertiseBadge = (expertise: string) => {
  const badges = {
    expert: { label: t.hardSkills.expertiseLevels.expert, color: 'from-cyan-500 to-blue-600', shadow: 'shadow-[0_0_20px_rgba(0,255,255,0.4)]' },
    proficient: { label: t.hardSkills.expertiseLevels.proficient, color: 'from-magenta-500 to-blue-600', shadow: 'shadow-[0_0_20px_rgba(255,0,255,0.3)]' },
    working: { label: t.hardSkills.expertiseLevels.working, color: 'from-blue-500 to-cyan-600', shadow: 'shadow-[0_0_20px_rgba(0,128,255,0.3)]' }
  };
  return badges[expertise as keyof typeof badges];
};

const getIcon = (iconName: string) => {
  const icons = {
    server: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>',
    code: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>',
    blueprint: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"></path>',
    database: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4"></path>',
    git: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"></path>',
    cloud: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z"></path>',
    mobile: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z"></path>',
    ai: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>'
  };
  return icons[iconName as keyof typeof icons];
};

const getColorClasses = (color: string) => {
  const colors = {
    cyan: {
      border: 'border-cyan-500/30',
      glow: 'group-hover:border-cyan-400/50',
      bg: 'bg-cyan-500/20',
      text: 'text-cyan-400',
      shadow: 'shadow-[0_0_20px_rgba(0,255,255,0.3)]',
      gradient: 'from-cyan-500/0 to-cyan-500/5'
    },
    magenta: {
      border: 'border-magenta-500/30',
      glow: 'group-hover:border-magenta-400/50',
      bg: 'bg-magenta-500/20',
      text: 'text-magenta-400',
      shadow: 'shadow-[0_0_20px_rgba(255,0,255,0.3)]',
      gradient: 'from-magenta-500/0 to-magenta-500/5'
    },
    blue: {
      border: 'border-blue-500/30',
      glow: 'group-hover:border-blue-400/50',
      bg: 'bg-blue-500/20',
      text: 'text-blue-400',
      shadow: 'shadow-[0_0_20px_rgba(0,128,255,0.3)]',
      gradient: 'from-blue-500/0 to-blue-500/5'
    }
  };
  return colors[color as keyof typeof colors];
};
---

<section id="hard-skills" class="relative py-20 sm:py-32 overflow-hidden">
  <div class="container mx-auto px-4 sm:px-6">
    <!-- Section header -->
    <div class="flex items-center gap-4 mb-12">
      <div class="w-2 h-16 bg-gradient-to-b from-cyan-500 via-blue-500 to-magenta-600 rounded-full"></div>
      <div>
        <p class="text-sm font-mono text-cyan-400/80 tracking-wider mb-1">{t.decorative.expertiseLevel}</p>
        <h2 class="text-4xl sm:text-5xl font-bold text-white">
          {t.hardSkills.title}
        </h2>
      </div>
    </div>

    <p class="text-lg text-gray-400 mb-12 max-w-3xl">{t.hardSkills.subtitle}</p>

    <!-- Skills grid -->
    <div class="max-w-6xl grid grid-cols-1 md:grid-cols-2 gap-6 mb-16">
      {skillCategories.map((category) => {
        const colors = getColorClasses(category.color);
        const badge = getExpertiseBadge(category.expertise);
        return (
          <div class={`group glass-card card-3d magnetic p-6 sm:p-8 rounded-lg
                      border ${colors.border} ${colors.glow}
                      transition-all duration-500 relative overflow-hidden`}>
            <div class="card-3d-inner">
              <!-- Header with icon and expertise badge -->
              <div class="flex items-start justify-between mb-4">
                <div class={`w-14 h-14 rounded-xl ${colors.bg} border ${colors.border}
                            flex items-center justify-center group-hover:${colors.shadow}
                            transition-shadow duration-300`}>
                  <svg class={`w-7 h-7 ${colors.text}`} fill="none" stroke="currentColor" viewBox="0 0 24 24" set:html={getIcon(category.icon)} />
                </div>

                <!-- Expertise badge -->
                <div class={`px-4 py-1.5 rounded-full bg-gradient-to-r ${badge.color}
                            text-white text-xs font-bold uppercase tracking-wider
                            ${badge.shadow}`}>
                  {badge.label}
                </div>
              </div>

              <!-- Title and description -->
              <h3 class={`text-xl font-bold text-white group-hover:${colors.text} transition-colors mb-3`}>
                {category.name}
              </h3>

              <p class="text-sm text-gray-400 mb-6 leading-relaxed group-hover:text-gray-300 transition-colors">
                {category.description}
              </p>

              <!-- Skills list -->
              <div class="flex flex-wrap gap-2">
                {category.items.map((item: string) => (
                  <span class="px-3 py-1.5 bg-white/5 border border-white/10 text-gray-400 text-xs rounded
                               hover:bg-white/10 hover:border-white/20 hover:text-white
                               transition-all duration-300">
                    {item}
                  </span>
                ))}
              </div>
            </div>

            <!-- Hover gradient -->
            <div class={`absolute inset-0 bg-gradient-to-br ${colors.gradient}
                        opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-lg`}></div>
          </div>
        );
      })}
    </div>

    <!-- Certifications section -->
    <div class="max-w-6xl">
      <h3 class="text-2xl font-bold text-white mb-6 flex items-center gap-3">
        <svg class="w-8 h-8 text-cyan-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"></path>
        </svg>
        {t.hardSkills.certifications.title}
      </h3>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {t.hardSkills.certifications.items.map((cert: any) => (
          <div class="glass-card p-6 rounded-lg border border-cyan-500/20 hover:border-cyan-400/40
                      transition-all duration-300 group">
            <div class="flex items-start gap-4">
              <div class="w-12 h-12 rounded-lg bg-gradient-to-br from-cyan-500/20 to-blue-600/20
                          border border-cyan-500/30 flex items-center justify-center flex-shrink-0
                          group-hover:shadow-[0_0_20px_rgba(0,255,255,0.3)] transition-shadow duration-300">
                <svg class="w-6 h-6 text-cyan-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-semibold text-white mb-1">{cert.name}</h4>
                <p class="text-sm text-gray-400">{cert.description}</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
