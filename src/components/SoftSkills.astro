---
const { t } = Astro.props;

const skillGroups = [
  {
    icon: 'communication',
    title: t.softSkills.categories.communication.title,
    skills: t.softSkills.categories.communication.items,
    color: 'cyan'
  },
  {
    icon: 'leadership',
    title: t.softSkills.categories.leadership.title,
    skills: t.softSkills.categories.leadership.items,
    color: 'magenta'
  },
  {
    icon: 'problem-solving',
    title: t.softSkills.categories.problemSolving.title,
    skills: t.softSkills.categories.problemSolving.items,
    color: 'blue'
  },
  {
    icon: 'project-management',
    title: t.softSkills.categories.projectManagement.title,
    skills: t.softSkills.categories.projectManagement.items,
    color: 'cyan'
  },
  {
    icon: 'adaptability',
    title: t.softSkills.categories.adaptability.title,
    skills: t.softSkills.categories.adaptability.items,
    color: 'magenta'
  },
  {
    icon: 'business',
    title: t.softSkills.categories.business.title,
    skills: t.softSkills.categories.business.items,
    color: 'blue'
  }
];

const getIcon = (iconName: string) => {
  const icons = {
    'communication': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"></path>',
    'leadership': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>',
    'problem-solving': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>',
    'project-management': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>',
    'adaptability': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>',
    'business': '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>'
  };
  return icons[iconName as keyof typeof icons];
};

const getColorClasses = (color: string) => {
  const colors = {
    cyan: {
      border: 'border-cyan-500/30',
      glow: 'group-hover:border-cyan-400/50',
      bg: 'bg-cyan-500/20',
      text: 'text-cyan-400',
      shadow: 'shadow-[0_0_20px_rgba(0,255,255,0.3)]',
      gradient: 'from-cyan-500/0 to-cyan-500/5'
    },
    magenta: {
      border: 'border-magenta-500/30',
      glow: 'group-hover:border-magenta-400/50',
      bg: 'bg-magenta-500/20',
      text: 'text-magenta-400',
      shadow: 'shadow-[0_0_20px_rgba(255,0,255,0.3)]',
      gradient: 'from-magenta-500/0 to-magenta-500/5'
    },
    blue: {
      border: 'border-blue-500/30',
      glow: 'group-hover:border-blue-400/50',
      bg: 'bg-blue-500/20',
      text: 'text-blue-400',
      shadow: 'shadow-[0_0_20px_rgba(0,128,255,0.3)]',
      gradient: 'from-blue-500/0 to-blue-500/5'
    }
  };
  return colors[color as keyof typeof colors];
};
---

<section id="soft-skills" class="relative py-20 sm:py-32 overflow-hidden">
  <!-- Background accent -->
  <div class="absolute top-1/2 left-1/4 w-96 h-96 bg-magenta-500/5 rounded-full blur-3xl"></div>
  <div class="absolute bottom-1/4 right-1/4 w-96 h-96 bg-cyan-500/5 rounded-full blur-3xl"></div>

  <div class="container mx-auto px-4 sm:px-6 relative z-10">
    <!-- Section header -->
    <div class="flex items-center gap-4 mb-12">
      <div class="w-2 h-16 bg-gradient-to-b from-magenta-500 via-blue-500 to-cyan-600 rounded-full"></div>
      <div>
        <p class="text-sm font-mono text-magenta-400/80 tracking-wider mb-1">{t.decorative.professionalSkills}</p>
        <h2 class="text-4xl sm:text-5xl font-bold text-white">
          {t.softSkills.title}
        </h2>
      </div>
    </div>

    <p class="text-lg text-gray-400 mb-12 max-w-3xl">{t.softSkills.subtitle}</p>

    <!-- Skills grid -->
    <div class="max-w-6xl grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
      {skillGroups.map((group) => {
        const colors = getColorClasses(group.color);
        return (
          <div class={`group glass-card card-3d magnetic p-8 rounded-lg
                      border ${colors.border} ${colors.glow}
                      transition-all duration-500 relative overflow-hidden`}>
            <div class="card-3d-inner">
              <!-- Icon -->
              <div class={`w-16 h-16 rounded-xl ${colors.bg} border ${colors.border}
                          flex items-center justify-center mb-6
                          group-hover:${colors.shadow} transition-shadow duration-300`}>
                <svg class={`w-8 h-8 ${colors.text}`} fill="none" stroke="currentColor" viewBox="0 0 24 24" set:html={getIcon(group.icon)} />
              </div>

              <!-- Title -->
              <h3 class={`text-xl font-bold text-white group-hover:${colors.text} transition-colors mb-4`}>
                {group.title}
              </h3>

              <!-- Skills list -->
              <ul class="space-y-3">
                {group.skills.map((skill: string) => (
                  <li class="flex items-start gap-3">
                    <div class={`w-1.5 h-1.5 ${colors.bg} rounded-full mt-2 flex-shrink-0
                                shadow-[0_0_5px_currentColor]`}></div>
                    <span class="text-sm text-gray-400 group-hover:text-gray-300 transition-colors">
                      {skill}
                    </span>
                  </li>
                ))}
              </ul>
            </div>

            <!-- Hover gradient -->
            <div class={`absolute inset-0 bg-gradient-to-br ${colors.gradient}
                        opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none rounded-lg`}></div>
          </div>
        );
      })}
    </div>

    <!-- Highlighted achievements -->
    <div class="max-w-6xl glass-card p-8 sm:p-12 rounded-lg border border-magenta-500/30">
      <h3 class="text-2xl font-bold text-white mb-8 flex items-center gap-3">
        <svg class="w-8 h-8 text-magenta-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
        </svg>
        {t.softSkills.highlights.title}
      </h3>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {t.softSkills.highlights.items.map((highlight: any) => (
          <div class="group p-6 rounded-lg bg-white/5 border border-white/10
                      hover:bg-white/10 hover:border-magenta-500/30
                      transition-all duration-300">
            <div class="flex items-start gap-4">
              <div class="w-2 h-2 bg-magenta-400 rounded-full mt-2 shadow-[0_0_10px_rgba(255,0,255,0.5)]
                          group-hover:shadow-[0_0_20px_rgba(255,0,255,0.7)] transition-shadow"></div>
              <div>
                <h4 class="text-lg font-semibold text-white mb-2 group-hover:text-magenta-400 transition-colors">
                  {highlight.title}
                </h4>
                <p class="text-sm text-gray-400 leading-relaxed">
                  {highlight.description}
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
