---
interface Props {
  title: string;
  description?: string;
}

const { title, description = "Arturo Zvezda - Software Engineer" } = Astro.props;
import '../styles/global.css';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=JetBrains+Mono:wght@400;500;600&display=swap" rel="stylesheet">
    <title>{title}</title>
  </head>
  <body class="bg-black text-gray-300 overflow-x-hidden" style="font-family: 'Inter', sans-serif;">
    <!-- Custom Cursor -->
    <div class="custom-cursor"></div>
    <div class="custom-cursor-dot"></div>

    <slot />

    <script>
      // Custom Cursor Logic
      const cursor = document.querySelector('.custom-cursor') as HTMLElement;
      const cursorDot = document.querySelector('.custom-cursor-dot') as HTMLElement;
      let mouseX = 0, mouseY = 0;
      let cursorX = 0, cursorY = 0;
      let dotX = 0, dotY = 0;

      document.addEventListener('mousemove', (e) => {
        mouseX = e.clientX;
        mouseY = e.clientY;

        // Instant update for dot
        dotX = mouseX;
        dotY = mouseY;
        if (cursorDot) {
          cursorDot.style.left = `${dotX}px`;
          cursorDot.style.top = `${dotY}px`;
        }
      });

      // Smooth cursor follow
      function animateCursor() {
        const ease = 0.15;
        cursorX += (mouseX - cursorX) * ease;
        cursorY += (mouseY - cursorY) * ease;

        if (cursor) {
          cursor.style.left = `${cursorX}px`;
          cursor.style.top = `${cursorY}px`;
        }

        requestAnimationFrame(animateCursor);
      }
      animateCursor();

      // Cursor hover effects
      const magneticElements = document.querySelectorAll('.magnetic');
      magneticElements.forEach((element) => {
        element.addEventListener('mouseenter', () => {
          document.body.classList.add('cursor-hover');
        });
        element.addEventListener('mouseleave', () => {
          document.body.classList.remove('cursor-hover');
        });
      });

      // Magnetic effect for elements
      magneticElements.forEach((element: Element) => {
        const el = element as HTMLElement;
        el.addEventListener('mousemove', (e: MouseEvent) => {
          const rect = el.getBoundingClientRect();
          const x = e.clientX - rect.left - rect.width / 2;
          const y = e.clientY - rect.top - rect.height / 2;

          const strength = 0.15;
          el.style.transform = `translate(${x * strength}px, ${y * strength}px)`;
        });

        el.addEventListener('mouseleave', () => {
          el.style.transform = 'translate(0, 0)';
        });
      });
    </script>
  </body>
</html>
